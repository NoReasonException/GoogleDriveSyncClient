package com.noReasonException.EventGeneratable.EventGenerators.InotifyWrapper;
/***
 * Known Bugs
 * 1) no look current directory.....SOLVED
 * 2) in upper case letters , break SOLVED
 * 3)strlen in initializeInotify return invalid len ....SOLVED
 * 4)memory Leak (buffer not freed in waitForFileEvent...)
 */

import com.noReasonException.DirectoryManager.DirectoryController.DirectoryController;
import com.noReasonException.EventGeneratable.EventRequest.EventRequest;
import com.noReasonException.EventHandler.EventHandlerFactory;

import java.io.IOException;

/*** <p>
 * Class InotifyNative , A wrapper to InotifySystem
 * @author  noReasonException(Stefanos Stefanou)
 * @version 0.0.4
 *      A simple wrap over the native inotify system
 * Known Bugs...
 * +------------------------------------------------------------------------------------------------------------------------------------------------------+
 * +    ID  Description                                                     Version             Status          Notes                                     |
 * +    00  no look in first parent directory                               0.0.1               SOLVED          bad initialization in BFS Native Algorithm|
 * +    01  When the directory contains uppercase letters , SEGFAULT        0.0.2               SOLVED                             -                      |
 * +    02  Invalid String length return                                    0.0.3               SOLVED          use GetByteArrayLength instead of strlen()|
 * +    03  Memory Leak(Buffer not freed in waitForFileEvent                0.0.4               PENDING                             -                     |
 * +------------------------------------------------------------------------------------------------------------------------------------------------------+
 * FIXME...
 * +---------------------------------------------------------------------------------------------------------------------+
 * +    ID  Description                                                     Version             Status          Notes    |
 * +    00  Memory Leak(Buffer not freed in waitForFileEvent                0.0.4               PENDING                  |
 * +    01  Inotify native real constructor , replace the IN_ALL_EVENTS     0.0.4               PENDING                  |
 * +    02  InotifyWrapper.isBad() replace by an Exception                  0.0.4               PENDING                  |
 * +---------------------------------------------------------------------------------------------------------------------+</P>*/
public class InotifyWrapper {
    private boolean bad=false;

    /***
     * Initializes the inotify native subsystem
     * @param path  the byte(2byte) representation of the path to watch for events...
     * @return 0 in initalization complete successfully<br>nonzero otherwise...
     *
     */
    private native int          initializeInotify(byte path[]);
    /***
     * Initializes the inotify native subsystem with the dynamic watch descriptor add feature enabled
     * @param path , the byte(2byte) representation of the path to watch for events...
     * @return 0 in initalization complete successfully<br>nonzero otherwise...
     *
     */
    private native int          initializeInotify_onCreateFileCreateNewWatchDecriptorFeature_enabled(byte path[]);

    /***
     * Blocks untill detect any kind of I/O
     * @return 0 on success , nonzero otherwise
     */
    public  native int          waitForFileEvent();

    /***
     *
     * @return The file path of the last event occured , generated by {@link #waitForFileEvent()}
     * @throws IOException In case of any I/O error...
     */
    public  native byte []      getLastModifiedFile() throws IOException;       //get path of last modified file

    /***
     * Get the event occured , happened to the last file (Create/Delete e.t.c) , for a list of possible values , @see {@link ModifiedType ModifiedType}
     * <h3>Note:you call this method , after you call the  {@link #getLastModifiedFile()}</h3>
     * <h3>Note:this method must always called equally times as {@link #getLastModifiedFile()}</h3>
     * @return the last event , as a integer bitmask , of values exist in {@link ModifiedType ModifiedType}
     *
     */
    public  native int          getLastModifiedType();

    /***
     * Load the inotifyNative Subsustem shared object
     */
    static{
        Runtime.getRuntime().loadLibrary("InotifyNative");
    }

    /***
     *Note:Dont Use it directly , use a {@link com.noReasonException.EventGeneratable.EventGenerators.InotifyWrapperEventGenerator InotifyWrapperEventGenerator} instead
     *
     * @param pathToWatch               the path witch the inotify subsystem will generate events....
     * @param onCreateWatchDirectory    use the dynamic watch descriptor addition feature?
     */
    public InotifyWrapper(java.lang.String pathToWatch,boolean onCreateWatchDirectory){
        if(onCreateWatchDirectory){
            if(this.initializeInotify_onCreateFileCreateNewWatchDecriptorFeature_enabled(pathToWatch.getBytes())!=0){
                this.bad=true;
            }
        }
        else{
            if(this.initializeInotify(pathToWatch.getBytes())!=0){
                this.bad=true;
            }
        }
    }

    /***
     * Check if something went wroong in the initialization...
     * @return true if an error occured , false otherwise...
     */
    public boolean isBad(){
        return this.bad;
    }





}