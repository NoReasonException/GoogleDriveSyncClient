package com.noReasonException.EventGeneratable;

/***
 * EventGenerator Class...
 * @author  noReasonException(Stefanos Stefanou)
 * @version 0.0.1
 *      Descibes the external interface of a EventGeneratable class..
 *
 *
 * Known Bugs...
 * +---------------------------------------------------------------------------------------------------------------------+
 * +    ID  Description                                                     Version             Status          Notes    |
 * +---------------------------------------------------------------------------------------------------------------------+
 * FIXME...
 * +---------------------------------------------------------------------------------------------------------------------+
 * +    ID  Description                                                     Version             Status          Notes    |
 * +---------------------------------------------------------------------------------------------------------------------+
 */

public interface EventGenerator {
    /***
     * Blocks untill detect any I/O
     * @return true on success <br> false if any error occured
     *
     */
    boolean waitForEvent();
    /***
     * Get the last event , generated by {@link #waitForEvent() waitForEvent()}
     * @return an {@link com.noReasonException.EventGeneratable.EventRequest.EventRequest EventRequest} Object , Descibe the event <br>
     *            null if there are no other data available (and you must call again {@link #waitForEvent() waitForEvent() }
     */
    com.noReasonException.EventGeneratable.EventRequest.EventRequest getLastEventOccured();

    /***
     * @return  The associated {@link com.noReasonException.DirectoryManager.DirectoryController.DirectoryController DirectoryController }which describes the abstract location where the event occured
     *
     */
    com.noReasonException.DirectoryManager.DirectoryController.DirectoryController    getDirectoryController();

}
